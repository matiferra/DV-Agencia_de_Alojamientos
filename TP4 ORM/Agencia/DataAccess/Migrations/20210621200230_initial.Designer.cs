// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20210621200230_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataAccess.Agencia", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("cantAlojamientos")
                        .HasColumnType("int");

                    b.Property<int?>("id_alojamientoid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_alojamientoid");

                    b.ToTable("Agencia");
                });

            modelBuilder.Entity("DataAccess.AgenciaManager", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("id_agenciaid")
                        .HasColumnType("int");

                    b.Property<int?>("id_reservaid")
                        .HasColumnType("int");

                    b.Property<int?>("id_usuarioid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_agenciaid");

                    b.HasIndex("id_reservaid");

                    b.HasIndex("id_usuarioid");

                    b.ToTable("AgenciaManager");
                });

            modelBuilder.Entity("DataAccess.Alojamiento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("barrio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cantidadDeBanios")
                        .HasColumnType("int");

                    b.Property<int>("cantidadDePersonas")
                        .HasColumnType("int");

                    b.Property<int>("cantidad_de_habitaciones")
                        .HasColumnType("int");

                    b.Property<string>("estrellas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("id_ciudadid")
                        .HasColumnType("int");

                    b.Property<double>("precio_por_dia")
                        .HasColumnType("float");

                    b.Property<double>("precio_por_persona")
                        .HasColumnType("float");

                    b.Property<bool>("tv")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("id_ciudadid");

                    b.ToTable("Alojamiento");
                });

            modelBuilder.Entity("DataAccess.Cabania", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("banios")
                        .HasColumnType("int");

                    b.Property<string>("barrios")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("habitaciones")
                        .HasColumnType("float");

                    b.Property<int?>("id_alojamientoid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_alojamientoid");

                    b.ToTable("Cabania");
                });

            modelBuilder.Entity("DataAccess.Ciudades", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Ciudades");
                });

            modelBuilder.Entity("DataAccess.Hotel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("id_alojamientoid")
                        .HasColumnType("int");

                    b.Property<double>("precio_por_persona")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("id_alojamientoid");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("DataAccess.Reserva", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FDesde")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FHasta")
                        .HasColumnType("datetime2");

                    b.Property<int>("contador")
                        .HasColumnType("int");

                    b.Property<int?>("id_alojamientoid")
                        .HasColumnType("int");

                    b.Property<int?>("id_usuarioid")
                        .HasColumnType("int");

                    b.Property<float>("precio")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("id_alojamientoid");

                    b.HasIndex("id_usuarioid");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("DataAccess.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<bool>("bloqueado")
                        .HasColumnType("bit");

                    b.Property<bool>("esAdmin")
                        .HasColumnType("bit");

                    b.Property<int>("intentosLogueo")
                        .HasColumnType("int");

                    b.Property<string>("mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pass")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("DataAccess.Agencia", b =>
                {
                    b.HasOne("DataAccess.Alojamiento", "id_alojamiento")
                        .WithMany()
                        .HasForeignKey("id_alojamientoid");

                    b.Navigation("id_alojamiento");
                });

            modelBuilder.Entity("DataAccess.AgenciaManager", b =>
                {
                    b.HasOne("DataAccess.Agencia", "id_agencia")
                        .WithMany()
                        .HasForeignKey("id_agenciaid");

                    b.HasOne("DataAccess.Reserva", "id_reserva")
                        .WithMany()
                        .HasForeignKey("id_reservaid");

                    b.HasOne("DataAccess.Usuario", "id_usuario")
                        .WithMany()
                        .HasForeignKey("id_usuarioid");

                    b.Navigation("id_agencia");

                    b.Navigation("id_reserva");

                    b.Navigation("id_usuario");
                });

            modelBuilder.Entity("DataAccess.Alojamiento", b =>
                {
                    b.HasOne("DataAccess.Ciudades", "id_ciudad")
                        .WithMany()
                        .HasForeignKey("id_ciudadid");

                    b.Navigation("id_ciudad");
                });

            modelBuilder.Entity("DataAccess.Cabania", b =>
                {
                    b.HasOne("DataAccess.Alojamiento", "id_alojamiento")
                        .WithMany()
                        .HasForeignKey("id_alojamientoid");

                    b.Navigation("id_alojamiento");
                });

            modelBuilder.Entity("DataAccess.Hotel", b =>
                {
                    b.HasOne("DataAccess.Alojamiento", "id_alojamiento")
                        .WithMany()
                        .HasForeignKey("id_alojamientoid");

                    b.Navigation("id_alojamiento");
                });

            modelBuilder.Entity("DataAccess.Reserva", b =>
                {
                    b.HasOne("DataAccess.Alojamiento", "id_alojamiento")
                        .WithMany()
                        .HasForeignKey("id_alojamientoid");

                    b.HasOne("DataAccess.Usuario", "id_usuario")
                        .WithMany()
                        .HasForeignKey("id_usuarioid");

                    b.Navigation("id_alojamiento");

                    b.Navigation("id_usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
